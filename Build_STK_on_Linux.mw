Note that these instructions apply to STK versions more recent that 0.8 alpha. If you want to compile an older version, please use the history feature of the wiki.

<div class="outer_info">
    <div class="inner_msg">
'''If you are a packager making a package for a Linux distribution''', please do '''not''' try to modify our build system to use system versions of bullet and irrlicht. In both cases we use a specific and/or modified version of the library, and linking STK against the system library will only introduce bugs (corrupted graphics, memory leaks) into SuperTuxKart. Thanks
</div></div>


== Installing dependencies ==

First of all, you will need a compiler and the autotools build system. When building the current SVN, you will also need cmake. Other dependencies you will need include openal, ogg, vorbis.

* Fedora
<code>yum install gcc-c++ autoconf automake libogg-devel libvorbis-devel openal-soft-devel fribidi-devel subversion libcurl-devel cmake irrlicht-devel</code>
* Ubuntu
<code>sudo apt-get install autoconf automake build-essential cmake libogg-dev libvorbis-dev libopenal-dev libxxf86vm-dev libgl1-mesa-dev libglu1-mesa-dev libcurl4-openssl-dev libfribidi-dev</code>


== Building Irrlicht ==

This part is required only for STK 0.8, no longer required with STK SVN.

From the STK root source directory, start by compiling irrlicht.
<code>cd lib/irrlicht/source/Irrlicht/
NDEBUG=1 make -j2
cd -</code>

(in this sample I configure make to use 2 cores. You can use more/less depending on your configuration).
Note that these steps should be repeated whenever we update irrlicht.


== Building SuperTuxKart ==

Then build SuperTuxKart using CMake

<code>mkdir cmake_build
cd cmake_build
cmake ..
make VERBOSE=1 -j2
</code>

(again in this sample I configure make to use 2 cores. You can use more/less depending on your configuration).


To make a debug build add <tt>-DCMAKE_BUILD_TYPE=Debug</tt> like this:

<code>cmake .. -DCMAKE_BUILD_TYPE=Debug</code>

Another option is to build the regular release version with its optimizations, but with debugging symbols still enabled. Replace the <tt>Debug</tt> with <tt>RelWithDebInfo</tt> for that.


And finally, to install (optional):

<code>sudo make install</code>

this will install in /usr/local. If you want to install somewhere else, replace the "cmake" command with something like:

<code>cmake .. -DCMAKE_INSTALL_PREFIX=/opt/stk</code>
