This page will explain how to build and packaged SuperTuxKart on mac OS X.


Please note that this is meant for developers and '''not''' casual users. Information below are notes i gathered about building STK 0.7 with irrLicht 1.7+. For older versions of STK, see [[Building STK 06 on OSX]]

= Getting Started =
* Install developer tools, either from the OS X Install DVD or from Apple's website

* symlink include folder of OpenGL framework to /usr/local/include/GL (Unix programs have an easier time finding it this way)
<code>sudo ln -s /System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/ /usr/local/include/GL</code>
(you might need to create <TT>/usr/local/include/</TT> first if you never built and installed anything from source! <TT>sudo mkdir -p /usr/local/include/</TT>)

= Dependencies =
* Download pre-built dependencies 
** [https://sourceforge.net/project/downloading.php?group_id=202302&filename=DepsFrameworks2.zip&a=73468757 for STK 0.7 alpha 2]
** [http://sourceforge.net/projects/supertuxkart/files/SuperTuxKart%20Dependencies/OSX/DepsFrameworks3.zip/download for latest STK trunk/more recent alphas/betas]
* Put the frameworks in [hard disk root]/Library/Frameworks

'' '''NOTE: the libintl included in this package is broken, and as such the provided Xcode project does not make use of it. For now you will need to manually build gettext''' (which includes building it universal and with backward comptibility, and manually packaging it into the app, if you wish to make an app that can be distributed. Please fall back to the old instructions for the gettext part until I get around to fix this)''

= irrLicht =
* Download irrLicht, and extract it.
Then build it using the provided Xcode project.

* copy ''libIrrlicht.a'' to ''/usr/local/lib''
<pre>
sudo cp ~/irrlicht-1.x/source/Irrlicht/MacOSX/build/Release/libIrrlicht.a /usr/local/lib/
</pre>
* copy ''include'' to ''/usr/local/include/irrlicht''
<pre>
sudo cp -R ~/irrlicht-1.x/include /usr/local/include/irrlicht
</pre>

= SuperTuxKart =

Build SuperTuxKart using the provided Xcode project (in /src/ide/)

That's all! If all went well, you're ready to run STK by hitting the big green 'run' button.

= Distributing =

The release build style will automatically build a 10.4-compatible, universal app bundle with data and frameworks inside

''' ''NOTE: As per the gettext mention above in the dependencies section, this is not totally true atm, you will need to manually include the libintl lib using dylibbundler as described in the document for STK 0.6''' ''
