This page will explain how to build and packaged SuperTuxKart on mac OS X.


Please note that this is meant for developers and '''not''' casual users. 

'''Note''' : building on OSX 10.7 is a little more painful because the compiler provided by Apple wants really hard to make 64-bits binaries but the dependencies pack I provide is 32-bits for backwards compatibility. If you want to compile on 10.7, you will need to either convince the compiler to produce 32-bits binaries, either produce a 64-bits dependency pack

Also see [[Source control]] to obtain the source code from git.


= Getting Started =
* Install developer tools, either from the OS X Install DVD or from Apple's website

* symlink include folder of OpenGL framework to /usr/local/include/GL (Unix programs have an easier time finding it this way)
<code>sudo ln -s /System/Library/Frameworks/OpenGL.framework/Versions/A/Headers/ /usr/local/include/GL</code>
(you might need to create <TT>/usr/local/include/</TT> first if you never built and installed anything from source! <TT>sudo mkdir -p /usr/local/include/</TT>)


On OSX 10.9.5 I had to use (FIXME):
<code>
$ xcrun --show-sdk-path
/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.10.sdk
$ sudo ln -s  /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/usr/include/  /usr/include
$ sudo ln -s  /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.9.sdk/System/Library/Frameworks/OpenGL.framework/Headers/ /usr/local/include/OpenGL</code>
The first link in order to find libcurl, the second to find opengl.

= Dependencies =
* Download pre-built dependencies [https://sourceforge.net/projects/supertuxkart/files/SuperTuxKart%20Dependencies/OSX/ from here]
* Put the frameworks in [hard disk root]/Library/Frameworks


= CMake =
You can use the CMake build system to build STK. At this time CMake will not make a binary that is ready for distribution.

'''You'll have to run these commands inside your <TT>stk-code</TT> directory. The <TT>stk-assets</TT> directory has to be in the parent directory of <TT>stk-code</TT>'''

'''Currently, you can play the GIT tree only with shaders disabled on OS X'''


'''Building on 10.7, 10.8, 10.9'''

With clang:
<code>mkdir cmake_build
cd cmake_build
cmake .. -DUSE_CPP2011=1
make
</code>


With GCC :
<code>mkdir cmake_build
cd cmake_build
cmake .. -DCMAKE_CXX_COMPILER=/usr/bin/g++ -DCMAKE_C_COMPILER=/usr/bin/gcc
make
</code>



'''Building on 10.6'''
<code>export CMAKE_OSX_ARCHITECTURES=i386
mkdir cmake_build
cd cmake_build
cmake ..
make
</code>

'''Building on 10.6 with compatibility for 10.5'''
alternatively, to make a build backwards compatible with OSX 10.5 (this will likely need to be done from 10.6, I don't think making builds that far backwards compatible is possible under 10.7+)
<code>export CMAKE_OSX_ARCHITECTURES=i386
mkdir cmake_build
cd cmake_build
cmake .. -DCMAKE_OSX_SYSROOT=/Developer/SDKs/MacOSX10.5.sdk/ -DCMAKE_OSX_DEPLOYMENT_TARGET=10.5
make
</code>



You can generate a Xcode project by replacing the "cmake .." line with "cmake .. -GXcode"

'''This is not recommended because Xcode needs much more space on the disk than CMake with make'''
